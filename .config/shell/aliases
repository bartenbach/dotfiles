# vim: ft=sh

TASK_BASE='task'

alias bit='bitcoin-cli getbalance'
alias bci='bitcoin-cli'
alias dmesg='dmesg --color=always'
alias dot="cd ~/code/dotfiles"
alias emerge="ewrapper"
alias epoch="solana epoch-info"
alias feh="feh --conversion-timeout 10 -Gd --draw-tinted --edit -."
alias grep='grep --color=auto'
alias gw='fortune | buttbutt -i 27 | lolcat' # RIP terry davis
alias history='history 1' # just show me all of it
alias imgur=imgurbash2
alias journal='/usr/bin/sudo journalctl -xb --no-hostname -e'
alias lci='litecoin-cli -rpcwallet=litecoin'
alias less='less -r' # enable color
alias linux='cd /usr/src/linux'
alias lit='litecoin-cli -rpcwallet=litecoin getbalance'
alias lock='xscreensaver-command -lock'
alias ls='ls --color=always -p --human-readable --group-directories-first'
alias minicom='sudo minicom -c on'
alias mutt='neomutt'
alias mv='mv -i'
alias nudworld="ewrapper -NuD @world && emerge -c"
alias nw="ewrapper -NuD @world && emerge -c"
alias octal='stat -c "%a"'
alias mystake='solana stake-account ~/doc/solana/stake-account.json --with-rewards'
alias zcam="zbarcam -q --raw --oneshot /dev/video4 | pass otp insert"
alias pm='pulsemixer'
alias projects='task projects'
alias repoman='repoman -j12 -v --ask'
alias sds='systemctl status'
alias tmux='tmux -f ${XDG_CONFIG_HOME}/tmux/tmux.conf'
alias tree='tree -C'
alias t='clear;${TASK_BASE}'
alias tl='tmux list-sessions'
alias tls='tmux list-sessions'
alias ta='tmux attach-session -t'
alias tt='clear && task list limit:10'
alias tn='tmux new-session -s'
alias tw='taskwarrior-tui'
alias tower="solana-watchtower --validator-identity ${PPI}"
alias updot='git commit -m update && git push && git push gh'
alias vifm='vifm .' # start vifm in cwd
alias vim='nvim'
alias vimdiff='nvim -d'
alias z='zathura -c ${XDG_CONFIG_HOME}/zathura/light --fork'
alias zl='zathura -c ${XDG_CONFIG_HOME}/zathura/light --fork'
alias zathura='zathura -c ${XDG_CONFIG_HOME}/zathura/light --fork'
alias zd='zathura --fork'

# mnemonic map
declare -A KEYMAP=(
    [eqg]='${EQUERY} g'
    [eqh]='${EQUERY} h'
    [eqs]='${EQUERY} s'
    [equ]='${EQUERY} u'
    [sa]='source ${XDG_CONFIG_HOME}/shell/aliases'
    [sp]='source ${XDG_CONFIG_HOME}/zsh/.zprofile'
    [sz]='source ${XDG_CONFIG_HOME}/zsh/.zshrc'
    [va]="${EDITOR} ${XDG_CONFIG_HOME}/shell/aliases"
    [vae]="${EDITOR} ${XDG_CONFIG_HOME}/aerc/aerc.conf"
    [vb]="${EDITOR} ${XDG_CONFIG_HOME}/xmobar/xmobarrc"
    [vd]="${EDITOR} ${HOME}/.Xdefaults"
    [vf]="${EDITOR} ${XDG_CONFIG_HOME}/vifm/vifmrc"
    [vg]="${EDITOR} ${XDG_CONFIG_HOME}/git/config"
    [vn]="${EDITOR} ${XDG_CONFIG_HOME}/newsboat/config"
    [vnu]="${EDITOR} ${XDG_CONFIG_HOME}/newsboat/urls"
    [vm]="${EDITOR} ${XDG_CONFIG_HOME}/neomutt/neomuttrc"
    [vp]="${EDITOR} ${ZDOTDIR}/.zprofile"
    [vq]="${EDITOR} ${XDG_CONFIG_HOME}/qutebrowser/config.py"
    [vt]="${EDITOR} ${XDG_CONFIG_HOME}/task/taskrc"
    [vu]="${ELEVATOR} ${EDITOR} /etc/portage/package.use/package.use"
    [vuu]="${ELEVATOR} ${EDITOR} /etc/portage/make.conf"
    [vv]="${EDITOR} ${XDG_CONFIG_HOME}/nvim/init.vim"
    [vw]="vimwhich"
    [vx]="${EDITOR} ${XDG_CONFIG_HOME}/xmonad/xmonad.hs"
    [vy]="${EDITOR} ${XDG_CONFIG_HOME}/alacritty/alacritty.yml"
    [vz]="${EDITOR} ${ZDOTDIR}/.zshrc"
    [xlog]="${PAGER} ${XDG_DATA_HOME}/xorg/Xorg.0.log"
    [wiki]="${EDITOR} -c VimwikiIndex"
    [world]="${ELEVATOR} ${EDITOR} /var/lib/portage/world"
)

# shellcheck disable=SC1073,SC1058,SC1072
for key value in "${(kv)KEYMAP[@]}"; do
  alias "${key}=${value}"
done

# $1 - start and follow service log of this service
function sdf() {
  sudo systemctl start "$1"
  sudo journalctl -fu "$1"
}

function report() {
  clear
  echo -e "\e[0;92m==================================================================="
  echo -e "===                    \e[0;94mValidator Report\e[0;92m                         ==="
  echo -e "===================================================================\e[0m"
  pp
  echo ""
  echo -e "\e[0;92m===> \e[0;94mLeader\e[0m"
  echo "  --> Leader slots: $(leader | ((wc -l - 1)))"
  echo ""
  echo -e "\e[0;92m===> \e[0;94mStake\e[0m"
  stake
  echo ""
  echo -e "\e[0;92m===> \e[0;94mEpoch\e[0m"
  epoch | grep "Epoch"
  echo ""
  echo -e "\e[0;92m===> \e[0;94mBalance\e[0m"
  fundvalidator
  echo ""
  echo -e "\e[0;92m===> \e[0;94mStakeView Rank\e[0m"
  stakeview_rank
  echo ""
  echo -e "\e[0;92m===> \e[0;94mStakeWiz Rank\e[0m"
  stakewiz_rank
}

function rank() {
  stakeview_rank
  stakewiz_rank
}

function stakewiz_rank() {
  echo -n "Stakewiz rank: "
  curl -s https://api.stakewiz.com/validator/DsiG71AvUHUEo9rMMHqM9NAWQ6ptguRAHyot6wGzLJjx | jq '.rank'
}

function stakeview_rank() {
  echo -n "Stakeview rank: "
  echo "$(curl -s https://stakeview.app/apy/$(solana epoch).json | jq '[ .validators[] | .id == env.PPI ] | index(true)') + 1" | bc
}

function stake() {
  echo "\e[0;92m  ->\e[0;94mActivating\e[0m"
  if ! solana stakes $PPV | grep -i "Activating"; then
    echo "None"
  fi
  echo "\e[0;92m  ->\e[0;94mDeactivating\e[0m"
  if ! solana stakes $PPV | grep -C1 "deactivates"; then
    echo "None"
  fi
}

function pp() {
  solana validators -n 2>/dev/null | grep Identity -m1
  solana validators -n -r --sort credits | grep $PPI
}

function credits() {
  solana validators -n -r --sort credits | less
}

function leader(){
  echo "Current slot: $(solana slot)"
  solana leader-schedule | grep $PPI
}

# $1 - the file you want to edit but don't know where in $PATH it is
function vimwhich() {
  if [[ -z $1 ]]; then
    echo "usage: vimwhich [[ -s | --sudo ]] file"
    echo "  open file in vim using which"
  elif [[ "$1" == "-s" ]] || [[ "$1" == "--sudo" ]]; then
    if [[ -n "$2" ]]; then
      sudo vim $(which "$2")
    else
      echo "usage: vimwhich [[ -s | --sudo ]] file"
    fi
  else
    vim $(which "$1")
  fi
}

# $1 - the wallet you wish to load
function loadwallet() {
  if [[ -n $1 ]]; then
    currency=$1
    eval "${currency}-cli" loadwallet "${currency}"
  else
    echo "Please specify cryptocurrency name"
  fi
}

# $1 - the balance you wish to inquire about
function bal() {
  if [[ -n $1 ]]; then
    currency=$1
    eval "${currency}-cli" getbalance
  else
    echo "Please specify cryptocurrency name"
  fi
}

# $1 - the address you want
function getaddress() {
  if [[ -n $1 ]]; then
    currency=$1
    eval "${currency}-cli" getaddressesbylabel '""'
  else
    echo "Please specify cryptocurrency name"
  fi
}

# rename a tmux session
# $1 - old session name
# $2 - new session name
function tmv() {
  tmux rename-session -t "$1" "$2"
}

# $1 - the img (qr code) to generate otp from
function zimg() {
  zbarimg -q --raw $1 | pass otp insert
}

# $1 markdown file
function mkpdf() {
  pandoc -o out.pdf -f markdown -t pdf "$1"
}

# quick ignore files
# $1 file(s) to ignore
function ignore() {
  echo "$1" >> .gitignore
}

# grep history easier
# $1 search string
function hgrep() {
  query="$1"
  fc -l 1 | grep "${query}"
}

function taskclear() {
   clear
   eval "${TASK_BASE}"
}

# start a task
# $1 task id
function start() {
  task "$1" start
  taskclear
}

# stop a task
# $1 task id
function stop() {
  task "$1" stop
  taskclear
}

# add a task
# $@ everything else
function add() {
  task add "$@"
  taskclear
}

# complete a task
# $1 task id
function complete() {
  task "$1" "done"
  taskclear
}

# complete a task
# $1 task id
function del() {
  task "$1" del
  taskclear
}

# annotate a task
# $1 task id
function annotate() {
  task "$1" annotate "$2"
  taskclear
}
